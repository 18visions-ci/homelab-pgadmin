name: Deploy pgAdmin

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual execution for prod

env:
  PI_DEV002: ${{ env.PI_DEV002 }}
  PROD_HOST: ${{ env.PROD_HOST }}

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Debug Secrets and Variables
        run: |
          echo "Checking secrets retrieval..."
          echo "SSH Key Length: $(echo "${{ secrets.SSH_PRIVATE_KEY }}" | wc -c)"
          echo "DEV_HOST: '${{ env.PI_DEV002 }}'"
          echo "PROD_HOST: '${{ env.PROD_HOST }}'"


      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          if [ -n "${{ env.PI_DEV002 }}" ]; then
            ssh-keyscan -H ${{ env.PI_DEV002 }} >> ~/.ssh/known_hosts
          else
            echo "ERROR: PI_DEV002 is not set!"
            exit 1
          fi

      - name: Deploy to Dev
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ env.PI_DEV002 }} << 'EOF'
            cd ~/homelab-pgadmin
            git pull
            docker-compose --env-file .env.dev up -d
          EOF

  deploy-prod:
    needs: deploy-dev
    runs-on: ubuntu-latest
    environment: prod  # Requires manual approval
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.PROD_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to Prod
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.PROD_HOST }} << 'EOF'
            cd ~/homelab-pgadmin
            git pull
            docker-compose --env-file .env.prod up -d
          EOF
