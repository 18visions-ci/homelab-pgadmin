name: Deploy pgAdmin

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual execution for prod

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    env:
      PI_DEV002: ${{ vars.PI_DEV002 }}
      PROD_HOST: ${{ vars.PROD_HOST }}
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Debug Environment Variables
        run: |
          echo "Checking environment variables..."
          echo "PI_DEV002: '${{ env.PI_DEV002 }}'"
          echo "PROD_HOST: '${{ env.PROD_HOST }}'"
          if [ -z "${{ env.PI_DEV002 }}" ]; then
            echo "ERROR: PI_DEV002 is empty!"
            exit 1
          fi

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          printf "%s" "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          if [ -n "${{ env.PI_DEV002 }}" ]; then
            ssh-keyscan -H ${{ env.PI_DEV002 }} >> ~/.ssh/known_hosts
          else
            echo "ERROR: PI_DEV002 is not set!"
            exit 1
          fi

      - name: Deploy to Dev
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ env.PI_DEV002 }} << 'EOF'
            cd ~/homelab-pgadmin
            git pull
            docker-compose --env-file .env.dev up -d
          EOF

  deploy-prod:
    needs: deploy-dev
    runs-on: ubuntu-latest
    environment: prod  # Requires manual approval
    env:
      PI_DEV002: ${{ vars.PI_DEV002 }}
      PROD_HOST: ${{ vars.PROD_HOST }}
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
          if [ -n "${{ env.PROD_HOST }}" ]; then
            ssh-keyscan -H ${{ env.PROD_HOST }} >> ~/.ssh/known_hosts
          else
            echo "ERROR: PROD_HOST is not set!"
            exit 1
          fi

      - name: Deploy to Prod
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ env.PROD_HOST }} << 'EOF'
            cd ~/homelab-pgadmin
            git pull
            docker-compose --env-file .env.prod up -d
          EOF
